openapi: 3.0.3
info:
  description: This specification is intended to describe the functionality of the
    photo album application (User's part)
  title: Photo album OpenAPI specification
  version: 1.0.11
servers:
- description: Dev server
  url: http://localhost:8080
paths:
  /albums/{cover_id}:
    get:
      tags:
        - AlbumController
      summary: Find album by cover_id
      description: Find album by cover_id
      operationId: getAlbumByCoverId
      parameters:
         - name: cover_id
           in: path
           description: cover id , which need to find an album
           required: true
           schema:
             type: integer
             format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadAlbum' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
         - AlbumController
      summary: Delete album by cover_id
      description: Method for delete album
      operationId: deleteAlbum
      parameters:
            - name: cover_id
              in: path
              description: ID of the cover that needs to be deleted
              required: true
              schema:
                 type: integer
                 format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  /albums:
    post:
      summary: Method for created album 
      tags:
        - AlbumController
      operationId: createAlbum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbum'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadAlbum' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            
  /covers:
    post:
      summary: Method for created cover 
      tags:
        - CoverController
      operationId: createCover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCover'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadCover' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /covers/{user_id}:
    get:
      tags:
        - CoverController
      summary: Find covers by user_id
      operationId: getAllCoverByUserId
      parameters:
         - name: user_id
           in: path
           description: user_id , which need to find covers
           required: true
           schema:
             type: integer
             format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covers' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /covers/{id}:
    delete:
      tags:
         - CoverController
      summary: Delete cover by cover ID
      description: Method for delete cover
      operationId: deleteCover
      parameters:
            - name: id
              in: path
              description: ID for delete cover
              required: true
              schema:
                 type: integer
                 format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /covers/{id}:
    put:
      summary: Update cover
      tags:
        - CoverController
      description: Method for update cover 
      operationId: updateCover
      parameters:
        - name: id
          in: path
          description: id that need to update cover
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent cover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCover'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadCover' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /pages:
    post:
      summary: Method for created page 
      tags:
        - PageController
      operationId: createPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePage'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPage' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /pages/{id}:
    delete:
      tags:
         - PageController
      summary: Delete page by id
      description: Method for delete page
      operationId: deletePage
      parameters:
            - name: id
              in: path
              description: id for delete page
              required: true
              schema:
                 type: integer
                 format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /pages/{album_id}/all:
    get:
      tags:
        - PageController
      summary: Find all pages by album_id
      description: Find pages by album_id
      operationId: getAllPagesByAlbumId
      parameters:
         - name: album_id
           in: path
           description: album_id , which need to find pages
           required: true
           schema:
             type: integer
             format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pages' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /pages/{id}:
    get:
      tags:
        - PageController
      summary: Find page by ID
      description: Find page by ID
      operationId: getPage
      parameters:
         - name: id
           in: path
           description: id , which need to find page
           required: true
           schema:
             type: integer
             format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPage' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /pages/{id}:
    put:
      summary: Update cover
      tags:
        - PageController
      description: Method for update page 
      operationId: updatePage
      parameters:
        - name: id
          in: path
          description: id that need to update page
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent page in the album
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePage'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPage' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'              
  
  /images:
    post:
      summary: Method for created image 
      tags:
        - ImageController
      operationId: createImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImage'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadImage' 
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /images/{id}:
    delete:
      tags:
         - ImageController
      summary: Delete image by ID
      description: Method for delete image
      operationId: deleteImage
      parameters:
            - name: id
              in: path
              description: ID for delete image
              required: true
              schema:
                 type: integer
                 format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  schemas:
    CreatePage:
      type: object
      properties:
        description:
          type: string
          example: some words about page
        color:
          type: string
          example: red
        template_page:
          type: string
          example: Horizontal image and text field below
        tag_people:
          type: string
          example: Andrew,Egor
        tag_place:
          type: string
          example: Germany,Berlin
        animation:
          type: string
          example: slide
    
    ReadPage:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        description:
          type: string
          example: some words about page
        color:
          type: string
          example: red
        template_page:
          type: string
          example: Horizontal image and text field below
        tag_people:
          type: string
          example: Andrew,Egor
        tag_place:
          type: string
          example: Germany,Berlin
        animation:
          type: string
          example: slide
        album:
          $ref: '#/components/schemas/ReadAlbum'
    
    CreateAlbum:      
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        cover_id:
          type: integer
          format: int64
          
    ReadAlbum:
      type: object
      properties:
        id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        page:
          $ref: '#/components/schemas/Pages'
    
    CreateCover:
      type: object
      properties:
        description:
          type: string
          example: place description
        album_id:
          type: integer
          format: int64
    
    ReadCover:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
          example: place description
        album_id:
          type: integer
          format: int64
    
    CreateImage:
      type: object
      
      properties:
        link:
          type: string
          example: photo link
        page_id:
          type: integer
          format: int64
        cover_id:
          type: integer
          format: int64
    
    ReadImage:
      type: object
      required:
        - link
      properties:
        id:
          type: integer
          format: int64
        link:
          type: string
          example: photo link
        page_id:
          type: integer
          format: int64
        cover_id:
          type: integer
          format: int64
      
    Covers:
      type: array
      items:
         $ref: '#/components/schemas/ReadCover'
    
    Pages:
      type: array
      items:
         $ref: '#/components/schemas/ReadPage'  
    
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
          