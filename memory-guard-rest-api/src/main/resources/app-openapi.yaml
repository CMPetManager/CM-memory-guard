openapi: 3.0.3
info:
  description: This specification is intended to describe the functionality of the
    photo album application (User's part)
  title: Photo album OpenAPI specification
  version: 1.0.11
servers:
  - description: Dev server
    url: http://localhost:8080
paths:
  /albums:
    post:
      summary: Method for created album
      tags:
        - AlbumController
      operationId: createAlbum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumModel'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumModel'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
  /albums/{userId}:
    get:
      tags:
        - AlbumController
      description: Get all user's albums
      operationId: getUserAlbums
      parameters:
        - name: userId
          in: path
          description: userId for finding user's albums
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: all user's album found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlbumModel'
        '500':
          description: something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'


  /albums/{id}:
    get:
      tags:
        - AlbumController
      summary: Find album by album id
      description: Get album by item id
      operationId: getAlbumByItemId
      parameters:
        - name: id
          in: path
          description: albumId must defined to find album
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: album found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumModel'
        '404':
            description: album not found
        '500':
          description: something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
    put:
      tags:
        - AlbumController
      summary: Update Album
      description: Update album by albumId
      operationId: updateAlbum
      parameters:
        - name: id
          in: path
          description: id , need for updating album
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: album updated without errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumModel'
        '404':
          description: album not found by its id
        '500':
          description: something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
    delete:
      tags:
        - AlbumController
      summary: Remove album by id
      description: delete album by its id
      operationId: deleteAlbum
      parameters:
        - name: id
          in : path
          description: id of the album
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'


  /albums/{coverId}:
    get:
      tags:
        - AlbumController
      summary: Find album by coverId
      description: Find album by coverId
      operationId: getAlbumByCoverId
      parameters:
        - name: coverId
          in: path
          description: coverId , which need to find an album
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumModel'
        '404':
          description: not found
        '500':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
    delete:
      tags:
        - AlbumController
      summary: Delete album by coverId
      description: Method for delete album
      operationId: deleteAlbumByCover
      parameters:
        - name: coverId
          in: path
          description: ID of the cover that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /covers:
    post:
      summary: Method for created cover
      tags:
        - CoverController
      operationId: createCover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cover'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /covers/{userId}:
    get:
      tags:
        - CoverController
      summary: Find covers by userId
      operationId: getAllCoverByUserId
      parameters:
        - name: userId
          in: path
          description: userId , which need to find covers
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Covers'
        '404':
          description: not found
        '500':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /covers/{coverId}:
    put:
      summary: Update cover
      tags:
        - CoverController
      description: Method for update cover
      operationId: updateCover
      parameters:
        - name: coverId
          in: path
          description: id that need to update cover
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent cover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cover'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
    delete:
      tags:
        - CoverController
      summary: Delete cover by coverId
      description: Method for delete cover
      operationId: deleteCover
      parameters:
        - name: coverId
          in: path
          description: ID for delete cover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /pages:
    post:
      summary: Method for created page
      tags:
        - PageController
      operationId: createPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageModel'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageModel'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /pages/{albumId}:
    get:
      tags:
        - PageController
      summary: Find all pages by albumId
      description: Find pages by albumId
      operationId: getAllPagesByAlbumId
      parameters:
        - name: albumId
          in: path
          description: albumId , which need to find pages
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pages'
        '404':
          description: not found
        '500':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /pages/{id}:
    get:
      tags:
        - PageController
      summary: Find page by ID
      description: Find page by ID
      operationId: getPage
      parameters:
        - name: id
          in: path
          description: id , which need to find page
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageModel'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'
    put:
      summary: Update cover
      tags:
        - PageController
      description: Method for update page
      operationId: updatePage
      parameters:
        - name: id
          in: path
          description: id that need to update page
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent page in the album
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageModel'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageModel'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

    delete:
      tags:
        - PageController
      summary: Delete page by id
      description: Method for delete page
      operationId: deletePage
      parameters:
        - name: id
          in: path
          description: id for delete page
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /images:
    post:
      summary: Method for created image
      tags:
        - ImageController
      operationId: createImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /images/{id}:
    delete:
      tags:
        - ImageController
      summary: Delete image by ID
      description: Method for delete image
      operationId: deleteImage
      parameters:
        - name: id
          in: path
          description: ID for delete image
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: {}
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationError'

components:
  schemas:
    PageModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        description:
          type: string
          example: some words about page
        color:
          type: string
          example: red
        templatePage:
          type: string
          example: Horizontal image and text field below
        tagPeople:
          type: string
          example: Andrew,Egor
        tagPlace:
          type: string
          example: Germany,Berlin
        animation:
          type: string
          example: slide
        album:
          $ref: '#/components/schemas/AlbumModel'

    AlbumModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cover:
          $ref: '#/components/schemas/Cover'
        pages:
          type: array
          items:
            $ref: '#/components/schemas/PageModel'
        user:
          type: object
          items:
            $ref: '#/components/schemas/UserModel'


    Cover:
      type: object
      properties:
        description:
          type: string
          example: place description
        coverImage:
          $ref: '#/components/schemas/Image'

    Image:
      type: object
      required:
        - link
      properties:
        id:
          type: integer
          format: int64
        link:
          type: string
          example: photo link
        pageId:
          type: integer
          format: int64
        coverId:
          type: integer
          format: int64

    Pages:
      type: array
      items:
        $ref: '#/components/schemas/PageModel'

    Covers:
      type: array
      items:
        $ref: '#/components/schemas/Cover'

    UserModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: user's name
        password:
          type: string
          example: user's password
        email:
          type: string
          example: user's email
        albums:
          type: array
          items:
            $ref: '#/components/schemas/AlbumModel'

    ApplicationError:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
