openapi: 3.0.3
info:
  description: This specification is intended to describe the functionality of the
    photo album application (User's part)
  title: Photo album OpenAPI specification
  version: 1.0.11
servers:
  - description: Dev server
    url: http://localhost:8080
paths:
  /login:
    post:
      summary: Method for user authorization
      tags:
        - SecurityController
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users:
    post:
      summary: Method for registration
      tags:
        - SecurityController
      operationId: registrationUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAPI'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAPI'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /refresh-token:
    post:
      summary: Method for refresh token
      tags:
        - SecurityController
      description: refresh user's auth
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/forgot-password:
    post:
      summary: Forgot password
      tags:
        - SecurityController
      description: after this method user should check his email
      operationId: processForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
      responses:
        default:
          description: successful operation
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/reset-password:
    patch:
      summary: Reset password
      tags:
        - SecurityController
      description: Method for reset password
      operationId: processResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      responses:
        default:
          description: successful operation
        '400':
          description: something wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    UserAPI:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: theUser
        email:
          type: string
          example: egor@email.com
        password:
          type: string
          example: MyNew_pass
        confirmationResetToken:
          type: String
          example: hsjjujffuvn2944mjf

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: egor@email.com
        password:
          type: string
          example: MyNew_pass

    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          example: egor@email.com
    UpdatePassword:
      type: object
      properties:
        token:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        token:
          $ref: '#/components/schemas/Token'

    Token:
      type: object
      properties:
        accessToken:
          type: string
        expirationIn:
          type: integer
          format: int64
        refreshToken:
          type: string

    RefreshToken:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        refreshToken:
          type: string

    ReadPage:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        description:
          type: string
          example: some words about page
        color:
          type: string
          example: red
        templatePage:
          type: string
          example: Horizontal image and text field below
        tagPeople:
          type: string
          example: Andrew,Egor
        tagPlace:
          type: string
          example: Germany,Berlin
        animation:
          type: string
          example: slide
        album:
          $ref: '#/components/schemas/ReadAlbum'
    ReadAlbum:
      type: object
      properties:
        id:
          type: integer
          format: int64
        page:
          $ref: '#/components/schemas/Pages'

    Pages:
      type: array
      items:
        $ref: '#/components/schemas/ReadPage'
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string      
          